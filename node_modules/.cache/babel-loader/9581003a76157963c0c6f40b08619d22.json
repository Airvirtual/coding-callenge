{"ast":null,"code":"export var selectURI = function (operation, fallbackURI) {\n  var context = operation.getContext();\n  var contextURI = context.uri;\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === 'function') {\n    return fallbackURI(operation);\n  } else {\n    return fallbackURI || '/graphql';\n  }\n};","map":{"version":3,"sources":["../../../src/link/http/selectURI.ts"],"names":[],"mappings":"AAEA,OAAO,IAAM,SAAS,GAAG,SAAA,CACvB,SAAoB,EACpB,WAAyD,EAAA;EAEzD,IAAM,OAAO,GAAG,SAAS,CAAC,UAAU,EAAE;EACtC,IAAM,UAAU,GAAG,OAAO,CAAC,GAAG;EAE9B,IAAI,UAAU,EAAE;IACd,OAAO,UAAU;GAClB,MAAM,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;IAC5C,OAAO,WAAW,CAAC,SAAS,CAAC;GAC9B,MAAM;IACL,OAAQ,WAAsB,IAAI,UAAU;EAC7C;AACH,CAAC","sourcesContent":["import { Operation } from '../core';\n\nexport const selectURI = (\n  operation: Operation,\n  fallbackURI?: string | ((operation: Operation) => string),\n) => {\n  const context = operation.getContext();\n  const contextURI = context.uri;\n\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === 'function') {\n    return fallbackURI(operation);\n  } else {\n    return (fallbackURI as string) || '/graphql';\n  }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}