{"ast":null,"code":"var _jsxFileName = \"/home/admin-latitude/Desktop/TechTrue/coding-callenge/src/components/Pools.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_POOL_DATA } from '../queries';\nimport { Pool } from './Pool';\nimport { Spinner } from './Spinner';\nimport { Pagination } from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Pools = () => {\n  _s();\n  const PAGE_SIZE = 10;\n  const [current, setCurrent] = useState(0);\n  const {\n    loading,\n    data\n  } = useQuery(GET_POOL_DATA, {\n    pollInterval: 1000 * 20,\n    variables: {\n      orderBy: 'totalValueLockedUSD'\n    },\n    nextFetchPolicy: 'cache-and-network'\n  });\n  const handlePaginationChange = newCurrent => {\n    setCurrent(newCurrent);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Pagination, {\n        current: current,\n        total: Math.ceil(data.pools.length / PAGE_SIZE),\n        onChange: handlePaginationChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), data.pools.slice(current * PAGE_SIZE, (current + 1) * PAGE_SIZE).map(_ref => {\n        let {\n          id,\n          token0,\n          token1,\n          totalValueLockedUSD,\n          volumeUSD\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Pool, {\n          token0: token0,\n          token1: token1,\n          totalValueLockedUSD: totalValueLockedUSD,\n          volumeUSD: volumeUSD\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(Pools, \"C0Bq5FTiOn3OM3ea0IfWONdmjpM=\", false, function () {\n  return [useQuery];\n});\n_c = Pools;\nvar _c;\n$RefreshReg$(_c, \"Pools\");","map":{"version":3,"names":["useState","useQuery","GET_POOL_DATA","Pool","Spinner","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","Pools","_s","PAGE_SIZE","current","setCurrent","loading","data","pollInterval","variables","orderBy","nextFetchPolicy","handlePaginationChange","newCurrent","children","fileName","_jsxFileName","lineNumber","columnNumber","total","Math","ceil","pools","length","onChange","slice","map","_ref","id","token0","token1","totalValueLockedUSD","volumeUSD","_c","$RefreshReg$"],"sources":["/home/admin-latitude/Desktop/TechTrue/coding-callenge/src/components/Pools.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { PoolData, GET_POOL_DATA } from '../queries'\nimport { Pool } from './Pool'\nimport { Spinner } from './Spinner'\nimport { Pagination } from './Pagination'\n\nexport const Pools: React.FC = () => {\n  const PAGE_SIZE = 10\n  const [current, setCurrent] = useState(0)\n\n  const { loading, data } = useQuery<PoolData>(GET_POOL_DATA, {\n    pollInterval: 1000 * 20,\n    variables: { orderBy: 'totalValueLockedUSD' },\n    nextFetchPolicy: 'cache-and-network',\n  })\n\n  const handlePaginationChange = (newCurrent: number): void => {\n    setCurrent(newCurrent)\n  }\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        data && (\n          <>\n            <Pagination\n              current={current}\n              total={Math.ceil(data.pools.length / PAGE_SIZE)}\n              onChange={handlePaginationChange}\n            />\n            {data.pools\n              .slice(current * PAGE_SIZE, (current + 1) * PAGE_SIZE)\n              .map(({ id, token0, token1, totalValueLockedUSD, volumeUSD }) => (\n                <Pool\n                  key={id}\n                  token0={token0}\n                  token1={token1}\n                  totalValueLockedUSD={totalValueLockedUSD}\n                  volumeUSD={volumeUSD}\n                />\n              ))}\n          </>\n        )\n      )}\n    </>\n  )\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAAmBC,aAAa,QAAQ,YAAY;AACpD,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,UAAU,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,OAAO,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,SAAS,GAAG,EAAE;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAM;IAAEe,OAAO;IAAEC;EAAK,CAAC,GAAGf,QAAQ,CAAWC,aAAa,EAAE;IAC1De,YAAY,EAAE,IAAI,GAAG,EAAE;IACvBC,SAAS,EAAE;MAAEC,OAAO,EAAE;IAAsB,CAAC;IAC7CC,eAAe,EAAE;EACnB,CAAC,CAAC;EAEF,MAAMC,sBAAsB,GAAIC,UAAkB,IAAW;IAC3DR,UAAU,CAACQ,UAAU,CAAC;EACxB,CAAC;EAED,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,EACGR,OAAO,gBACNR,OAAA,CAACH,OAAO;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GAEXX,IAAI,iBACFT,OAAA,CAAAE,SAAA;MAAAc,QAAA,gBACEhB,OAAA,CAACF,UAAU;QACTQ,OAAO,EAAEA,OAAQ;QACjBe,KAAK,EAAEC,IAAI,CAACC,IAAI,CAACd,IAAI,CAACe,KAAK,CAACC,MAAM,GAAGpB,SAAS,CAAE;QAChDqB,QAAQ,EAAEZ;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjC,EACDX,IAAI,CAACe,KAAK,CACRG,KAAK,CAACrB,OAAO,GAAGD,SAAS,EAAE,CAACC,OAAO,GAAG,CAAC,IAAID,SAAS,CAAC,CACrDuB,GAAG,CAACC,IAAA;QAAA,IAAC;UAAEC,EAAE;UAAEC,MAAM;UAAEC,MAAM;UAAEC,mBAAmB;UAAEC;QAAU,CAAC,GAAAL,IAAA;QAAA,oBAC1D7B,OAAA,CAACJ,IAAI;UAEHmC,MAAM,EAAEA,MAAO;UACfC,MAAM,EAAEA,MAAO;UACfC,mBAAmB,EAAEA,mBAAoB;UACzCC,SAAS,EAAEA;QAAU,GAJhBJ,EAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAKP;MAAA,CACH,CAAC;IAAA;EAGT,iBACA;AAEP,CAAC;AAAAhB,EAAA,CA1CYD,KAAe;EAAA,QAIAT,QAAQ;AAAA;AAAAyC,EAAA,GAJvBhC,KAAe;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}