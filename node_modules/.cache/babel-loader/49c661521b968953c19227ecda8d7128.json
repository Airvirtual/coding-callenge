{"ast":null,"code":"import \"../globals/index.js\";\nimport { isNonNullObject } from \"./objects.js\";\nfunction deepFreeze(value) {\n  var workSet = new Set([value]);\n  workSet.forEach(function (obj) {\n    if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n      Object.getOwnPropertyNames(obj).forEach(function (name) {\n        if (isNonNullObject(obj[name])) workSet.add(obj[name]);\n      });\n    }\n  });\n  return value;\n}\nfunction shallowFreeze(obj) {\n  if (__DEV__ && !Object.isFrozen(obj)) {\n    try {\n      Object.freeze(obj);\n    } catch (e) {\n      if (e instanceof TypeError) return null;\n      throw e;\n    }\n  }\n  return obj;\n}\nexport function maybeDeepFreeze(obj) {\n  if (__DEV__) {\n    deepFreeze(obj);\n  }\n  return obj;\n}","map":{"version":3,"sources":["../../../src/utilities/common/maybeDeepFreeze.ts"],"names":[],"mappings":"AAAA,OAAO,qBAAa;AACpB,SAAS,eAAe,QAAQ,cAAY;AAE5C,SAAS,UAAU,CAAC,KAAU,EAAA;EAC5B,IAAM,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;EAChC,OAAO,CAAC,OAAO,CAAC,UAAA,GAAG,EAAA;IACjB,IAAI,eAAe,CAAC,GAAG,CAAC,IAAI,aAAa,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE;MACtD,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI,EAAA;QAC1C,IAAI,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;MACxD,CAAC,CAAC;IACH;EACH,CAAC,CAAC;EACF,OAAO,KAAK;AACd;AAEA,SAAS,aAAa,CAAmB,GAAM,EAAA;EAC7C,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;IACpC,IAAI;MACF,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;KACnB,CAAC,OAAO,CAAC,EAAE;MAIV,IAAI,CAAC,YAAY,SAAS,EAAE,OAAO,IAAI;MACvC,MAAM,CAAC;IACR;EACF;EACD,OAAO,GAAG;AACZ;AAEA,OAAM,SAAU,eAAe,CAAI,GAAM,EAAA;EACvC,IAAI,OAAO,EAAE;IACX,UAAU,CAAC,GAAG,CAAC;EAChB;EACD,OAAO,GAAG;AACZ","sourcesContent":["import '../globals'; // For __DEV__\nimport { isNonNullObject } from './objects';\n\nfunction deepFreeze(value: any) {\n  const workSet = new Set([value]);\n  workSet.forEach(obj => {\n    if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n      Object.getOwnPropertyNames(obj).forEach(name => {\n        if (isNonNullObject(obj[name])) workSet.add(obj[name]);\n      });\n    }\n  });\n  return value;\n}\n\nfunction shallowFreeze<T extends object>(obj: T): T | null {\n  if (__DEV__ && !Object.isFrozen(obj)) {\n    try {\n      Object.freeze(obj);\n    } catch (e) {\n      // Some types like Uint8Array and Node.js's Buffer cannot be frozen, but\n      // they all throw a TypeError when you try, so we re-throw any exceptions\n      // that are not TypeErrors, since that would be unexpected.\n      if (e instanceof TypeError) return null;\n      throw e;\n    }\n  }\n  return obj;\n}\n\nexport function maybeDeepFreeze<T>(obj: T): T {\n  if (__DEV__) {\n    deepFreeze(obj);\n  }\n  return obj;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}