{"ast":null,"code":"var _jsxFileName = \"/home/admin-latitude/Desktop/TechTrue/coding-callenge/src/components/Swaps.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_SWAPS } from '../queries';\nimport { Swap } from './Swap';\nimport { Spinner } from './Spinner';\nimport { Pagination } from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Swaps = () => {\n  _s();\n  const PAGE_SIZE = 10;\n  const [current, setCurrent] = useState(0);\n  const {\n    loading,\n    data\n  } = useQuery(GET_SWAPS, {\n    pollInterval: 1000 * 2,\n    nextFetchPolicy: 'cache-and-network'\n  });\n  const handlePaginationChange = newCurrent => {\n    setCurrent(newCurrent);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Pagination, {\n        current: current,\n        total: Math.ceil(data.swaps.length / PAGE_SIZE),\n        onChange: handlePaginationChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), data.swaps.slice(current * PAGE_SIZE, (current + 1) * PAGE_SIZE).map(_ref => {\n        let {\n          id,\n          timestamp,\n          sender,\n          token0,\n          token1,\n          amount0,\n          amount1,\n          origin\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Swap, {\n          id: id,\n          timestamp: timestamp,\n          sender: sender,\n          token0: token0,\n          token1: token1,\n          amount0: amount0,\n          amount1: amount1,\n          origin: origin\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(Swaps, \"C0Bq5FTiOn3OM3ea0IfWONdmjpM=\", false, function () {\n  return [useQuery];\n});\n_c = Swaps;\nvar _c;\n$RefreshReg$(_c, \"Swaps\");","map":{"version":3,"names":["useState","useQuery","GET_SWAPS","Swap","Spinner","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","Swaps","_s","PAGE_SIZE","current","setCurrent","loading","data","pollInterval","nextFetchPolicy","handlePaginationChange","newCurrent","children","fileName","_jsxFileName","lineNumber","columnNumber","total","Math","ceil","swaps","length","onChange","slice","map","_ref","id","timestamp","sender","token0","token1","amount0","amount1","origin","_c","$RefreshReg$"],"sources":["/home/admin-latitude/Desktop/TechTrue/coding-callenge/src/components/Swaps.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { SwapData, GET_SWAPS } from '../queries'\nimport { Swap } from './Swap'\nimport { Spinner } from './Spinner'\nimport { Pagination } from './Pagination'\n\nexport const Swaps: React.FC = () => {\n  const PAGE_SIZE = 10\n  const [current, setCurrent] = useState(0)\n\n  const { loading, data } = useQuery<SwapData>(GET_SWAPS, {\n    pollInterval: 1000 * 2,\n    nextFetchPolicy: 'cache-and-network',\n  })\n\n  const handlePaginationChange = (newCurrent: number): void => {\n    setCurrent(newCurrent)\n  }\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        data && (\n          <>\n            <Pagination\n              current={current}\n              total={Math.ceil(data.swaps.length / PAGE_SIZE)}\n              onChange={handlePaginationChange}\n            />\n            {data.swaps\n              .slice(current * PAGE_SIZE, (current + 1) * PAGE_SIZE)\n              .map(({ id, timestamp, sender, token0, token1, amount0, amount1, origin }) => (\n                <Swap\n                  key={id}\n                  id={id}\n                  timestamp={timestamp}\n                  sender={sender}\n                  token0={token0}\n                  token1={token1}\n                  amount0={amount0}\n                  amount1={amount1}\n                  origin={origin}\n                />\n              ))}\n          </>\n        )\n      )}\n    </>\n  )\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAAmBC,SAAS,QAAQ,YAAY;AAChD,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,UAAU,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,OAAO,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,SAAS,GAAG,EAAE;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAM;IAAEe,OAAO;IAAEC;EAAK,CAAC,GAAGf,QAAQ,CAAWC,SAAS,EAAE;IACtDe,YAAY,EAAE,IAAI,GAAG,CAAC;IACtBC,eAAe,EAAE;EACnB,CAAC,CAAC;EAEF,MAAMC,sBAAsB,GAAIC,UAAkB,IAAW;IAC3DN,UAAU,CAACM,UAAU,CAAC;EACxB,CAAC;EAED,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,EACGN,OAAO,gBACNR,OAAA,CAACH,OAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GAEXT,IAAI,iBACFT,OAAA,CAAAE,SAAA;MAAAY,QAAA,gBACEd,OAAA,CAACF,UAAU;QACTQ,OAAO,EAAEA,OAAQ;QACjBa,KAAK,EAAEC,IAAI,CAACC,IAAI,CAACZ,IAAI,CAACa,KAAK,CAACC,MAAM,GAAGlB,SAAS,CAAE;QAChDmB,QAAQ,EAAEZ;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjC,EACDT,IAAI,CAACa,KAAK,CACRG,KAAK,CAACnB,OAAO,GAAGD,SAAS,EAAE,CAACC,OAAO,GAAG,CAAC,IAAID,SAAS,CAAC,CACrDqB,GAAG,CAACC,IAAA;QAAA,IAAC;UAAEC,EAAE;UAAEC,SAAS;UAAEC,MAAM;UAAEC,MAAM;UAAEC,MAAM;UAAEC,OAAO;UAAEC,OAAO;UAAEC;QAAO,CAAC,GAAAR,IAAA;QAAA,oBACvE3B,OAAA,CAACJ,IAAI;UAEHgC,EAAE,EAAEA,EAAG;UACPC,SAAS,EAAEA,SAAU;UACrBC,MAAM,EAAEA,MAAO;UACfC,MAAM,EAAEA,MAAO;UACfC,MAAM,EAAEA,MAAO;UACfC,OAAO,EAAEA,OAAQ;UACjBC,OAAO,EAAEA,OAAQ;UACjBC,MAAM,EAAEA;QAAO,GARVP,EAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QASP;MAAA,CACH,CAAC;IAAA;EAGT,iBACA;AAEP,CAAC;AAAAd,EAAA,CA7CYD,KAAe;EAAA,QAIAT,QAAQ;AAAA;AAAA0C,EAAA,GAJvBjC,KAAe;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}